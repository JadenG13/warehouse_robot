<launch>
  <!-- Global argument: name of the world -->
  <arg name="world_name" default="warehouse_1" />

  <!-- Make world_name available globally and to nodes -->
  <param name="world_name" value="$(arg world_name)" />

  <!-- Load world config parameters -->
  <rosparam file="$(find warehouse_robot)/config/params.yaml" command="load" />

  <!-- Get start position from loaded parameters using param substitution -->
  <arg name="x" default="0" />
  <arg name="y" default="0" />
  <arg name="a" default="0" />
  
  <!-- Grid overlay with private param ~world_name -->
  <node pkg="warehouse_robot" type="grid_overlay_publisher.py" name="grid_overlay_publisher" output="screen">
    <param name="world_name" value="$(arg world_name)" />
  </node>

  <!-- Manager node doesn't need private params -->
  <!-- <node pkg="warehouse_robot" type="manager.py" name="manager_agent" output="screen" /> -->

  <!-- OLLAMA AGENT
  <node pkg="warehouse_robot"
        type="ollama_agent.py"
        name="ollama_agent"
        output="screen">
    point it at the same world_name so it can pull the same map_cfg
    <param name="world_name" value="$(arg world_name)"/>
    optional: override which LLM model to use
    <param name="model"      value="llama3.2"/>
  </node> -->

  <!-- OLLAMA AGENT -->
  <node pkg="warehouse_robot"
        type="manager_combined.py"
        name="manager_agent"
        output="screen">
    <!-- point it at the same world_name so it can pull the same map_cfg -->
    <param name="world_name" value="$(arg world_name)"/>
    <!-- optional: override which LLM model to use -->
    <param name="model"      value="llama3.2"/>
  </node>

  <!-- Planner node needs access to ~world_name -->
  <node pkg="warehouse_robot" type="planner_agent.py" name="planner_agent" output="screen">
    <param name="world_name" value="$(arg world_name)" />
  </node>

  <!-- Validator node needs access to ~world_name -->
  <node pkg="warehouse_robot" type="validator_agent.py" name="validator_agent" output="screen">
    <param name="world_name" value="$(arg world_name)" />
  </node>
  
  <!-- Teleport Executor node needs access to ~world_name -->
  <node pkg="warehouse_robot" type="executor_agent_teleport.py" name="executor_agent" output="screen">
    <param name="world_name" value="$(arg world_name)" />
  </node>

  <!-- Launch Gazebo simulation of warehouse -->
  <include file="$(find warehouse_robot)/launch/world.launch" >
    <arg name="world_name" value="$(arg world_name)" />
    <arg name="x_pos" value="$(arg x)" />
    <arg name="y_pos" value="$(arg y)" />
    <arg name="z_pos" value="$(arg a)" />
  </include>

  <!-- Launch navigation with correct map -->
  <include file="$(find warehouse_robot)/launch/turtlebot3_navigation.launch" >
    <arg name="map_file" value="$(find warehouse_robot)/maps/$(arg world_name).yaml" />
    <arg name="initial_pose_x" value="$(arg x)"/>
    <arg name="initial_pose_y" value="$(arg y)"/>
    <arg name="initial_pose_a" value="$(arg a)"/>
  </include>
</launch>